% Encoding: UTF-8

@InProceedings{Meek:2009:WBC:1629501.1629507,
  author    = {Meek, Josh A. and Bradshaw, Michael K.},
  title     = {Web Based Computer Lab Imaging with Grimiore},
  booktitle = {Proceedings of the 37th Annual ACM SIGUCCS Fall Conference: Communication and Collaboration},
  year      = {2009},
  series    = {SIGUCCS '09},
  pages     = {19--24},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {1629507},
  doi       = {10.1145/1629501.1629507},
  isbn      = {978-1-60558-477-5},
  keywords  = {disk cloning, disk imaging, lab configurations, labs},
  location  = {St. Louis, Missouri, USA},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/1629501.1629507},
}

@Misc{LiJinhui,
  author      = {Li Jinhui and Zhang Ke and Zhang Fang},
  title       = {Network center's highly-efficient management solutions based on intel PXE-based remote cloning system},
  abstract    = {Quick system installation and recovery of university's computer centers has been issues of common concern to computer center's managers. Due to all causes such as the computer operating system's failures, crashes, data loss and other issues, we take the advantage of Intel PXE and ghost network multicast technology to implement the building and running the remote cloning system in LAN, greatly improving the efficiency of management and maintenance of the computer center and achieving a good result as we expected. This article describes the PXE, network multicast key technologies and working principles, and gives some methods and techniques summarized on the basis of Intel PXE-based remote cloning system, while the characteristics of the system are described.},
  affiliation = {Shenyang Agricultural University, China; School of Policedog Technique of MPS, China},
  doi         = {10.1109/ICACC.2011.6016442},
  keywords    = {Educational institutions; Servers; Computers; Read only memory; student client; Intel PXE technology; remote cloning},
  language    = {Undetermined},
}

@Misc{fogproject,
  author = {Project Founder : Chuck Syperski , Jian Zhang Senior Developer: Tom Elliott, Joe Schmitt},
  title  = {FOG Project - A free open-source network computer cloning and management solution},
  year   = {2012-2019},
  url    = {https://fogproject.org/},
}

@Misc{PXEb,
  title = {GRUB2 How To (6): PXE Boot},
  year  = {28/2013},
  url   = {http://lukeluo.blogspot.com/2013/06/grub-how-to6-pxe-boot.html},
}

@Misc{wiki,
  title = {Wikipage of FOG project},
  year  = {2012},
  url   = {https://wiki.fogproject.org/},
}

@Misc{PXE,
  title = {PXE - Preboot execution environment},
  url   = {https://en.wikipedia.org/wiki/Preboot_Execution_Environment},
}

@Misc{Partclone,
  author = {Project admins: Thomas\_Tsai, Co-developer: Jazz Yao-Tsung Wang, Steven Shiau, Ceasar Sun},
  title  = {Partclone - Partition clone and restore tool},
  year   = {2011-2018},
  url    = {https://www.partclone.org/},
}

@Misc{Partimage,
  title    = {Partimage - Open source disk backup software},
  abstract = {Partimage is opensource disk backup software. It saves partitions having a supported filesystem on a sector basis to an image file. Although it runs under Linux, Windows and most Linux filesystems are supported. The image file can be compressed to save disk space and transfer time and can be split into multiple files to be copied to CDs or DVDs.},
  url      = {http://www.partimage.org/},
}

@Misc{IPXE,
  title    = {IPXE - Open source network boot firmware},
  abstract = {iPXE is the leading open source network boot firmware. It provides a full PXE implementation enhanced with additional features such as:

boot from a web server via HTTP
boot from an iSCSI SAN
boot from a Fibre Channel SAN via FCoE
boot from an AoE SAN
boot from a wireless network
boot from a wide-area network
boot from an Infiniband network
control the boot process with a script},
  url      = {https://ipxe.org/},
}

@Misc{GRUB,
  title    = {GNU GRUB},
  year     = {1999-2019},
  abstract = {GNU GRUB is a Multiboot boot loader. It was derived from GRUB, the GRand Unified Bootloader, which was originally designed and implemented by Erich Stefan Boleyn.

Briefly, a boot loader is the first software program that runs when a computer starts. It is responsible for loading and transferring control to the operating system kernel software (such as the Hurd or Linux). The kernel, in turn, initializes the rest of the operating system (e.g. GNU).},
  url      = {https://www.gnu.org/software/grub/},
}

@Misc{buildroot,
  title    = {Buildroot Making Embedded Linux Easy},
  abstract = {Buildroot is a simple, efficient and easy-to-use tool to generate embedded Linux systems through cross-compilation.Cross-compilation toolchain, root filesystem generation, kernel image compilation and bootloader compilation. Thanks to its kernel-like menuconfig, gconfig and xconfig configuration interfaces, building a basic system with Buildroot is easy and typically takes 15-30 minutes. X.org stack, Gtk3, Qt 5, GStreamer, Webkit, Kodi, a large number of network-related and system-related utilities are supported.},
  url      = {https://buildroot.org/},
}
@Misc{osprober,
  title = {os-prober source package in Sid},
  year  = {2018/12/23},
  url   = {https://launchpad.net/debian/sid/+source/os-prober},
}
@Misc{MBR,
  title = {Master boot record},
  url   = {https://en.wikipedia.org/wiki/Master_boot_record},
}
@Misc{GPT,
  title = {GUID Partition Table},
  url   = {https://en.wikipedia.org/wiki/GUID_Partition_Table},
}
@Misc{UEFI,
  title = {Unified Extensible Firmware Interface},
  url   = {https://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface},
}
@Misc{BIOS,
  title = {BIOS},
  url   = {https://en.wikipedia.org/wiki/BIOS},
}
@Misc{DJANGO,
  title = {Django documentation},
  url   = {https://docs.djangoproject.com/en/3.0/},
}
@Misc{buildrootdoc,
  title = {The Buildroot user manual},
  url   = {https://buildroot.org/downloads/manual/manual.html},
}





@Comment{jabref-meta: databaseType:bibtex;}
